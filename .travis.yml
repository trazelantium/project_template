language: cpp
sudo: false

common_sources: &all_sources
  - ubuntu-toolchain-r-test
  - llvm-toolchain-trusty-5.0

matrix:
  include:

    - os: linux
      compiler: clang
      addons:
        apt:
          sources: *all_sources
          packages: ['clang-5.0', 'lcov']
      env: COMPILER='clang++-5.0'
    
    - os: linux
      compiler: gcc
      addons:
        apt:
          sources: *all_sources
          packages: ['g++-7', 'lcov']
      env: COMPILER='g++-7'

    - os: osx
      osx_image: xcode8.3
      compiler: clang
      env: COMPILER='clang++'

    - os: osx
      osx_image: xcode9.1
      compiler: clang
      env: COMPILER='clang++'


install:
  - ${COMPILER} --version
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - mkdir -p ${DEPS_DIR} && cd ${DEPS_DIR}
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      CMAKE_URL="https://cmake.org/files/v3.9/cmake-3.9.0-Linux-x86_64.tar.gz"
      mkdir cmake && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
      export PATH=${DEPS_DIR}/cmake/bin:${PATH}
    elif [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then
      which cmake || brew install cmake
    fi

before_script:
  - export CXX=${COMPILER}
  - cd ${TRAVIS_BUILD_DIR}
  - cmake -H. -Bbuild-debug   -DCMAKE_BUILD_TYPE=Debug   -Wdev -DENABLE_COVERAGE=ON
  - cmake -H. -Bbuild-release -DCMAKE_BUILD_TYPE=Release -Wdev

script:
  - cd build-debug
  - make -j 2
  -  CTEST_OUTPUT_ON_FAILURE=1 ctest -j 2
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
        make gcov
        make lcov
        bash <(curl -s https://codecov.io/bash) -X gcov || echo "Codecov did not collect coverage reports"
    fi
  - cd ../build-release
  - make -j 2
  - CTEST_OUTPUT_ON_FAILURE=1 ctest -j 2

